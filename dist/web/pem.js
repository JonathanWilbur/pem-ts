var pem=function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){e.exports=function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}},i=!0;try{e[r].call(o.exports,o,o.exports,n),i=!1}finally{i&&delete t[r]}return o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){e.exports=n(1)},function(e,t,n){"use strict";n.r(t);const r={65:0,66:1,67:2,68:3,69:4,70:5,71:6,72:7,73:8,74:9,75:10,76:11,77:12,78:13,79:14,80:15,81:16,82:17,83:18,84:19,85:20,86:21,87:22,88:23,89:24,90:25,97:26,98:27,99:28,100:29,101:30,102:31,103:32,104:33,105:34,106:35,107:36,108:37,109:38,110:39,111:40,112:41,113:42,114:43,115:44,116:45,117:46,118:47,119:48,120:49,121:50,122:51,48:52,49:53,50:54,51:55,52:56,53:57,54:58,55:59,56:60,57:61,43:62,47:63,45:62,95:63},o={0:"A",1:"B",2:"C",3:"D",4:"E",5:"F",6:"G",7:"H",8:"I",9:"J",10:"K",11:"L",12:"M",13:"N",14:"O",15:"P",16:"Q",17:"R",18:"S",19:"T",20:"U",21:"V",22:"W",23:"X",24:"Y",25:"Z",26:"a",27:"b",28:"c",29:"d",30:"e",31:"f",32:"g",33:"h",34:"i",35:"j",36:"k",37:"l",38:"m",39:"n",40:"o",41:"p",42:"q",43:"r",44:"s",45:"t",46:"u",47:"v",48:"w",49:"x",50:"y",51:"z",52:"0",53:"1",54:"2",55:"3",56:"4",57:"5",58:"6",59:"7",60:"8",61:"9",62:"+",63:"/"};n.d(t,"decode",function(){return l}),n.d(t,"encode",function(){return s});const i=16383;function a(e){const t=e.indexOf("=");return-1===t?e.length:t}function l(e){if(e.length%4>0)throw new Error("Base64 string with length not divisible by four.");const t=a(e),n=function(e,t){if(t||(t=a(e)),t<0)throw new Error("Base64 encoding length cannot be negative.");if(!Number.isInteger(t))throw new Error("Base64 encoding length must be integral.");return t===e.length?0:4-t%4}(e,t),o=new Uint8Array(t);let i=0;const l=n?t-4:t;let c=0,s=0;for(;s<l;)c=r[e.charCodeAt(s)]<<18|r[e.charCodeAt(s+1)]<<12|r[e.charCodeAt(s+2)]<<6|r[e.charCodeAt(s+3)],o[i++]=c>>16&255,o[i++]=c>>8&255,o[i++]=255&c,s+=4;if(n>2)throw new Error("Invalid number of padding bytes returned for Base64 string.");return 2===n?(c=r[e.charCodeAt(s)]<<2|r[e.charCodeAt(s+1)]>>4,o[i++]=255&c):1===n&&(c=r[e.charCodeAt(s)]<<10|r[e.charCodeAt(s+1)]<<4|r[e.charCodeAt(s+2)]>>2,o[i++]=c>>8&255,o[i++]=255&c),o}function c(e){return o[e>>18&63]+o[e>>12&63]+o[e>>6&63]+o[63&e]}function s(e){if(e.length<i){const r=e.length%3;for(var t=[],n=0;n<e.length;n+=3)t.push(c((e[n]<<16&16711680)+(e[n+1]<<8&65280)+(255&e[n+2])));if(1===r){const n=e[e.length-1];t.push(o[n>>2]+o[n<<4&63]+"==")}else if(2===r){const n=(e[e.length-2]<<8)+e[e.length-1];t.push(o[n>>10]+o[n>>4&63]+o[n<<2&63]+"=")}return t.join("")}{let t=[];for(let n=0;n<e.length;n+=i)t.push(s(e.slice(n,n+i)));return t.join("")}}}])},function(e,t,n){e.exports=n(2)},function(e,t,n){"use strict";n.r(t),n.d(t,"rfc7468CompliantPEMLabels",function(){return o}),n.d(t,"PEMError",function(){return i}),n.d(t,"PEMObject",function(){return a});var r=n(0);const o=["X509 CERTIFICATE","CERTIFICATE","CERTIFICATE PAIR","TRUSTED CERTIFICATE","NEW CERTIFICATE REQUEST","CERTIFICATE REQUEST","X509 CRL","ANY PRIVATE KEY","PUBLIC KEY","RSA PRIVATE KEY","RSA PUBLIC KEY","DSA PRIVATE KEY","DSA PUBLIC KEY","PKCS7","PKCS #7 SIGNED DATA","ENCRYPTED PRIVATE KEY","PRIVATE KEY","DH PARAMETERS","SSL SESSION PARAMETERS","DSA PARAMETERS","ECDSA PUBLIC KEY","EC PARAMETERS","EC PRIVATE KEY","PARAMETERS","CMS","ATTRIBUTE CERTIFICATE"];class i extends Error{constructor(e){super(e)}}class a{constructor(e,t){this._label="",this.data=new Uint8Array(0),void 0!==e&&(this.label=e),void 0!==t&&(this.data="string"==typeof t?Object(r.decode)(t):t)}static validateLabel(e){if(!e.match(/^[A-Z# ]*$/))throw new i("Malformed PEM label.");if(e.match(/\s\s/))throw new i("PEM label cannot contain consecutive spaces.");if(e.match(/--/))throw new i("PEM label cannot contain consecutive hyphen-minuses.");if(e.match(/^\s+/)||e.match(/\s+$/))throw new i("PEM label cannot begin or end with spaces.");if(e.match(/^\-+/)||e.match(/\-+$/))throw new i("PEM label cannot begin or end with hyphen-minuses.")}static parse(e){let t,n=0,r=[];do{if(null===(t=a.pemObjectRegex.exec(e.slice(n))))break;n+=t.index+1;const o=new a(t[1],t[2]);r.push(o)}while(n<e.length);return r}get label(){return a.validateLabel(this._label),this._label}set label(e){a.validateLabel(e),this._label=e}get hasRFC7468CompliantLabel(){return o.includes(this._label)}get preEncapsulationBoundary(){return`-----BEGIN ${this.label}-----`}get postEncapsulationBoundary(){return`-----END ${this.label}-----`}get encapsulatedTextPortion(){return(Object(r.encode)(this.data).match(/.{1,64}/g)||[]).join("\n")}decode(e){const t=e.trim().replace("\r","").split("\n");if(t.length<=2)throw new i("PEM is too small to be valid");if(0!==t[0].indexOf("-----BEGIN "))throw new i("PEM object did not start with '-----BEGIN '");if(!t[0].endsWith("-----"))throw new i("PEM object did not end with '-----'");const n=t[0].slice(11,t[0].length-5);if(0!==t[t.length-1].indexOf("-----END "))throw new i("Last line of PEM object did not start with '-----END '");if(!t[t.length-1].endsWith("-----"))throw new i("Last line of PEM object did not end with '-----'");if(n!==t[t.length-1].slice(9,t[t.length-1].length-5))throw new i("PEM object Pre-encapsulation Boundary label does not match Post-encapsulation Boundary label.");this.label=n;let o=1;for(;o<t.length-1&&t[o].match(/^\s*$/);)o++;t.slice(o,t.length-1).forEach(e=>{if(e.match(/^\s*$/))throw new i("Blank lines detected within PEM data")});const a=t.slice(1,t.length-1).join("").replace(/\s+/g,"");this.data=Object(r.decode)(a)}get encoded(){return this.preEncapsulationBoundary+"\n"+this.encapsulatedTextPortion+"\n"+this.postEncapsulationBoundary}}a.preEncapsulationBoundaryRegex=/^-----BEGIN (?<prelabel>[A-Z# ]*)-----$/m,a.postEncapsulationBoundaryRegex=/^-----END (?<postlabel>[A-Z# ]*)-----$/m,a.base64LineRegex=/^[A-Za-z0-9\+/=]+\s*$/gm,a.pemObjectRegex=new RegExp(a.preEncapsulationBoundaryRegex.source+"\n(?:\\s*\n)*(?<base64>(?:"+a.base64LineRegex.source+"\n)*)?"+a.postEncapsulationBoundaryRegex.source,"m")}]);